@using BHJet_Admin.Models.Clientes
@model ClienteModel

@Scripts.Render("~/bundles/jqueryval")
<script src="@Url.Content("~/Scripts/ClienteContato.js")"></script>

<!--QUANTIDADE DE CONTATOS-->
@{
	var edicao = BHJet_Core.Customizavel.MetodoPagina.PaginaEdicao();
	var contador = 0;
	var numeroDisplay = 1;

	if (!edicao)
	{

		#region Session
		if (Session["QTDE_CONTATO"] == null)
		{
			Session["QTDE_CONTATO"] = 0;
		}
		else
		{
			Session["QTDE_CONTATO"] = Convert.ToInt16(Session["QTDE_CONTATO"]) + 1;
		}
		//var count = Convert.ToInt16(Session["QTDE_CONTATO"]);
		contador = Convert.ToInt16(Session["QTDE_CONTATO"]);
		//var numeroDisplay = count + 1;
		numeroDisplay = contador + 1;

		#endregion

		#region Instancia
		//Instancia
		Model.Contato = new List<ContatoModel>()
		{
			new ContatoModel()
		};

		for (int i = 0; i <= contador; i++)
		{
			//Adiciona quantidade de instancias
			Model.Contato.Add(new ContatoModel());
		}
		#endregion
	}
}

<style type="text/css">
	.isDisabled {
		color: currentColor;
		cursor: not-allowed;
		opacity: 0.5;
		text-decoration: none;
		pointer-events: none;
	}
</style>
@if (edicao)
{
	var campoData = "text";
	var tamanho = Model.Contato.Count;

	for (var i = 0; i < tamanho; i++)
	{
		<div class="panel panel-default cst-panel-contato" style="margin:30px" id="div_panel_contato_@Html.IdFor(model => model.Contato[i])">
			@Html.HiddenFor(model => model.Contato[i].ContatoRemovido)
			@Html.HiddenFor(model => model.Contato[i].ID);
			<div class="panel-body">
				<div class="titulo">
					<h2>
						<a>
							<i class="fa fa-hashtag" aria-hidden="true"></i>
							<span style="font-size: 14px; font-weight: bold;">@numeroDisplay</span>
						</a>
						Contato
						@if (i > 0)
						{
							<div style="text-align: right;">
								<a style="font-size: 20px;" title="Remover contato" onclick="ExcluirContato(document.getElementsByClassName('cst-panel-contato')[@i]);">
									<i class="fa fa-trash-o" style="color:red" aria-hidden="true"></i>
								</a>
							</div>
						}
					</h2>
				</div>
				<div class="form-row">
					<div class="form-group col-xs-12 col-md-4">
						<div id="@Html.IdFor(model => model.Contato[i].Contato)">
							<label for="txtContato"><small class="obrigatorio">*</small>Contato</label>
							@Html.TextBoxFor(model => model.Contato[i].Contato, new { type = "text", @class = "form-control ctmErrorContato" })
						</div>
					</div>
					<div class="form-group col-xs-12 col-md-4">
						<div id="@Html.IdFor(model => model.Contato[i].Email)">
							<label for="txtEmail"><small class="obrigatorio">*</small>E-mail</label>
							@Html.TextBoxFor(model => model.Contato[i].Email, new { type = "email", @class = "form-control ctmErrorEmail" })
						</div>
					</div>
				</div>
				<div class="form-row">
					<div class="form-group col-xs-12 col-md-4">
						<div id="@Html.IdFor(model => model.Contato[i].TelefoneComercial)">
							<label for="txtTelefoneComercial"><small class="obrigatorio">*</small>Tel. Comercial</label>
							@Html.TextBoxFor(model => model.Contato[i].TelefoneComercial, new { type = "text", @class = "form-control mask-telefone ctmErrorTelefoneComercial" })
						</div>
					</div>
					<div class="form-group col-xs-12 col-md-4">
						<div id="@Html.IdFor(model => model.Contato[i].TelefoneCelular)">
							<label for="txtTelefoneCelular">Celular</label>
							@Html.TextBoxFor(model => model.Contato[i].TelefoneCelular, new { type = "text", @class = "form-control mask-celular ctmErrorTelefoneCelular" })
						</div>
					</div>
				</div>
				<div class="form-row">
					<div class="form-group col-xs-12 col-md-4">
						<div id="@Html.IdFor(model => model.Contato[i].Setor)">
							<label for="txtSetor"><small class="obrigatorio">*</small>Setor</label>
							@Html.TextBoxFor(model => model.Contato[i].Setor, new { type = "text", @class = "form-control ctmErrorSetor" })
						</div>
					</div>
					<div class="form-group col-xs-12 col-md-4">
						<div id="@Html.IdFor(model => model.Contato[i].DataNascimento)">
							<label for="txtDataNascimento">Aniversário</label>
							@Html.TextBoxFor(model => model.Contato[i].DataNascimento, new { type = campoData, @class = "form-control ctmErrorDataNascimento" })
						</div>
					</div>
				</div>
			</div>
		</div>
		numeroDisplay++;
	}
	edicao = false;
	Session["QTDE_CONTATO"] = tamanho-1;
}
else
{
	var campoData = "date";
	<div class="panel panel-default cst-panel-contato" style="margin:30px" id="div_panel_contato_@Html.IdFor(model => model.Contato[contador])">
		@Html.HiddenFor(model => model.Contato[contador].ContatoRemovido)
		<div class="panel-body">
			<div class="titulo">
				<h2>
					<a>
						<i class="fa fa-hashtag" aria-hidden="true"></i>
						<span style="font-size: 14px; font-weight: bold;">@numeroDisplay</span>
					</a>
					Contato
					@if (contador > 0)
					{
						<div style="text-align: right;">
							<a style="font-size: 20px;" title="Remover contato" onclick="RemoverBlocoContato(document.getElementsByClassName('cst-panel-contato')[@contador]);">
								<i class="fa fa-trash-o" style="color:red" aria-hidden="true"></i>
							</a>
						</div>
					}
				</h2>
			</div>
			<div class="form-row">
				<div class="form-group col-xs-12 col-md-4">
					<div id="@Html.IdFor(model => model.Contato[contador].Contato)">
						<label for="txtContato"><small class="obrigatorio">*</small>Contato</label>
						@Html.TextBoxFor(model => model.Contato[contador].Contato, new { type = "text", @class = "form-control ctmErrorContato" })
					</div>
				</div>
				<div class="form-group col-xs-12 col-md-4">
					<div id="@Html.IdFor(model => model.Contato[contador].Email)">
						<label for="txtEmail"><small class="obrigatorio">*</small>E-mail</label>
						@Html.TextBoxFor(model => model.Contato[contador].Email, new { type = "email", @class = "form-control ctmErrorEmail" })
					</div>
				</div>
			</div>
			<div class="form-row">
				<div class="form-group col-xs-12 col-md-4">
					<div id="@Html.IdFor(model => model.Contato[contador].TelefoneComercial)">
						<label for="txtTelefoneComercial"><small class="obrigatorio">*</small>Tel. Comercial</label>
						@Html.TextBoxFor(model => model.Contato[contador].TelefoneComercial, new { type = "text", @class = "form-control mask-telefone ctmErrorTelefoneComercial" })
					</div>
				</div>
				<div class="form-group col-xs-12 col-md-4">
					<div id="@Html.IdFor(model => model.Contato[contador].TelefoneCelular)">
						<label for="txtTelefoneCelular">Celular</label>
						@Html.TextBoxFor(model => model.Contato[contador].TelefoneCelular, new { type = "text", @class = "form-control mask-celular ctmErrorTelefoneCelular" })
					</div>
				</div>
			</div>
			<div class="form-row">
				<div class="form-group col-xs-12 col-md-4">
					<div id="@Html.IdFor(model => model.Contato[contador].Setor)">
						<label for="txtSetor"><small class="obrigatorio">*</small>Setor</label>
						@Html.TextBoxFor(model => model.Contato[contador].Setor, new { type = "text", @class = "form-control ctmErrorSetor" })
					</div>
				</div>
				<div class="form-group col-xs-12 col-md-4">
					<div id="@Html.IdFor(model => model.Contato[contador].DataNascimento)">
						<label for="txtDataNascimento">Aniversário</label>
						@Html.TextBoxFor(model => model.Contato[contador].DataNascimento, new { type = campoData, @class = "form-control ctmErrorDataNascimento" })
					</div>
				</div>
			</div>
		</div>
	</div>
}

