@using BHJet_Admin.Models.Clientes
@model ClienteModel

@Scripts.Render("~/bundles/jqueryval")
<script src="@Url.Content("~/Scripts/ClienteContato.js")"></script>

<!--QUANTIDADE DE CONTATOS-->
@{
	#region Session
	if (Session["QTDE_CONTATO"] == null)
	{
		Session["QTDE_CONTATO"] = 0;
	}
	else
	{
		Session["QTDE_CONTATO"] = Convert.ToInt16(Session["QTDE_CONTATO"]) + 1;
	}
	var count = Convert.ToInt16(Session["QTDE_CONTATO"]);
	var numeroDisplay = count + 1;
	#endregion

	#region Instancia
	//Instancia 
	Model.Contato = new List<ContatoModel>()
	{
		new ContatoModel()
	};

	for (int i = 0; i <= count; i++)
	{
		//Adiciona quantidade de instancias
		Model.Contato.Add(new ContatoModel());
	}
	#endregion

}

<style type="text/css">
	.isDisabled {
		color: currentColor;
		cursor: not-allowed;
		opacity: 0.5;
		text-decoration: none;
		pointer-events: none;
	}
</style>

<div class="panel panel-default cst-panel-contato" style="margin:30px" id="div_panel_contato_@Html.IdFor(model => model.Contato[count])">
	<div class="panel-body">
		<div class="titulo">
			<h2>
				<a>
					<i class="fa fa-hashtag" aria-hidden="true"></i>
					<span style="font-size: 14px; font-weight: bold;">@numeroDisplay</span>
				</a>
				Contato
				@if (count > 0)
				{
					<div style="text-align: right;">
						<a style="font-size: 20px;" title="Remover contato" onclick="RemoverBlocoContato(document.getElementsByClassName('cst-panel-contato')[@count]);" >
							<i class="fa fa-times" aria-hidden="true"></i>
						</a>
					</div>
				}
			</h2>
		</div>
		<div class="form-row">
			<div class="form-group col-xs-12 col-md-4">
				<div id="@Html.IdFor(model => model.Contato[count].Contato)">
					<label for="txtContato">Contato</label>
					@Html.TextBoxFor(model => model.Contato[count].Contato, new { type = "text", @class = "form-control ctmErrorContato" })
				</div>
			</div>
			<div class="form-group col-xs-12 col-md-4">
				<div id="@Html.IdFor(model => model.Contato[count].Email)">
					<label for="txtEmail">E-mail</label>
					@Html.TextBoxFor(model => model.Contato[count].Email, new { type = "email", @class = "form-control ctmErrorEmail" })
				</div>
			</div>
		</div>
		<div class="form-row">
			<div class="form-group col-xs-12 col-md-4">
				<div id="@Html.IdFor(model => model.Contato[count].TelefoneComercial)">
					<label for="txtTelefoneComercial">Tel. Comercial</label>
					@Html.TextBoxFor(model => model.Contato[count].TelefoneComercial, new { type = "text", @class = "form-control mask-telefone ctmErrorTelefoneComercial" })
				</div>
			</div>
			<div class="form-group col-xs-12 col-md-4">
				<div id="@Html.IdFor(model => model.Contato[count].TelefoneCelular)">
					<label for="txtTelefoneCelular">Celular</label>
					@Html.TextBoxFor(model => model.Contato[count].TelefoneCelular, new { type = "text", @class = "form-control mask-celular ctmErrorTelefoneCelular" })	
				</div>
			</div>
		</div>
		<div class="form-row">
			<div class="form-group col-xs-12 col-md-4">
				<div id="@Html.IdFor(model => model.Contato[count].Setor)">
					<label for="txtSetor">Setor</label>
					@Html.TextBoxFor(model => model.Contato[count].Setor, new { type = "text", @class = "form-control ctmErrorSetor" })
				</div>
			</div>
			<div class="form-group col-xs-12 col-md-2">
				<div id="@Html.IdFor(model => model.Contato[count].DataNascimento)">
					<label for="txtDataNascimento">Aniversário</label>
					@Html.TextBoxFor(model => model.Contato[count].DataNascimento, new { type = "date", @class = "form-control ctmErrorDataNascimento" })
				</div>
			</div>
		</div>
	</div>
</div>
