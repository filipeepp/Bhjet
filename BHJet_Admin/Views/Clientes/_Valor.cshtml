@using BHJet_Admin.Models.Clientes
@using BHJet_Core.Enum
@using BHJet_Core.Extension
@model ClienteModel

@Scripts.Render("~/bundles/jqueryval")

<script src="https://cdn.rawgit.com/plentz/jquery-maskmoney/master/dist/jquery.maskMoney.min.js"></script>
<script type="text/javascript">
	$(document).ready(function () {
		$(".mask-valor").maskMoney({
			prefix: "R$:",
			decimal: ",",
			thousands: "."
		});
		//OBS: RETIRAR MASCARA PARA ENVIO SERVIÇO: $('##Valor_ValorUnitario').maskMoney('unmasked')[0];

		$(".mask-data").mask("99/99/9999");
	});
</script>

<!--QUANTIDADE DE VALORES-->
@{
	#region Session
	if (Session["QTDE_VALOR"] == null)
	{
		Session["QTDE_VALOR"] = 0;
	}
	else
	{
		Session["QTDE_VALOR"] = Convert.ToInt16(Session["QTDE_VALOR"]) + 1;
	}
	var count = Convert.ToInt16(Session["QTDE_VALOR"]);
	#endregion

	#region Instancia
	//Instancia
	Model.Valor = new List<ValorModel>()
{
new ValorModel()
};

	for (int i = 0; i <= count; i++)
	{
		//Adiciona quantidade de instancias
		Model.Valor.Add(new ValorModel());
	}
	#endregion

}

<div class="panel panel-default" style="margin:30px">
	<div class="panel-body">
		<div class="titulo">
			<h2>
				<a onclick="history.go(-1);">
					<i class="fa fa-hashtag" aria-hidden="true"></i>
				</a>
				Valor
			</h2>
		</div>
		<div class="form-row">
			<div class="form-group col-xs-12 col-md-3">
				<label for="txtTipoTarifa">Tipo Tarifa</label>
				<br />
				@foreach (TipoTarifa tipoEnum in Enum.GetValues(typeof(TipoTarifa)))
				{
					var id = TagBuilder.CreateSanitizedId(string.Format("{0}_{1}_{2}_{3}", "rdbtn", typeof(TipoTarifa), tipoEnum, count));
					@Html.RadioButtonFor(model => model.Valor[count].TipoTarifa, tipoEnum, new { id, @class = "option-input radio" })
					@Html.Label(tipoEnum.RetornaDisplayNameEnum(), new { @for = id })
					<br />
				}
				@Html.ValidationMessageFor(model => model.Valor[count].TipoTarifa, null, new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-row">
			<div class="form-group col-xs-12 col-md-2">
				<label for="txtValorUnitario">Valor Unitário</label>
				@Html.TextBoxFor(model => model.Valor[count].ValorUnitario, new { @class = "form-control mask-valor" })
				@Html.ValidationMessageFor(model => model.Valor[count].ValorUnitario, null, new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-row">
			<div class="form-group col-xs-12 col-md-3">
				<label>Vigência</label>
				<div class="input-group input-daterange">
					@Html.TextBoxFor(model => model.Valor[count].VigenciaInicio, new { type = "date", style = "width: 160px;", @class = "form-control mask-data" })
					<div class="input-group-addon">a</div>
					@Html.TextBoxFor(model => model.Valor[count].VigenciaFim, new { type = "date", style = "width: 160px;", @class = "form-control mask-data" })
				</div>
				@Html.ValidationMessageFor(model => model.Valor[count].VigenciaInicio, null, new { @class = "text-danger" })
				@Html.ValidationMessageFor(model => model.Valor[count].VigenciaFim, null, new { @class = "text-danger" })
			</div>
			<div class="form-group col-xs-12 col-md-2">
				<label for="txtFranquia">Franquia Km/mês</label>
				@Html.TextBoxFor(model => model.Valor[count].Franquia, new { type = "text", @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Valor[count].Franquia, null, new { @class = "text-danger" })
			</div>
			<div class="form-group col-xs-12 col-md-2">
				<label for="txtFranquiaAdicional">Franquia Adicional</label>
				@Html.TextBoxFor(model => model.Valor[count].FranquiaAdicional, new { type = "text", @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Valor[count].FranquiaAdicional, null, new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-row">
			<div class="form-group col-xs-12 col-md-6">
				<label for="txaObservacoesValor">Observações</label>
				@Html.TextAreaFor(model => model.Valor[count].Observacao, new { type = "text", @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Valor[count].Observacao, null, new { @class = "text-danger" })
			</div>
		</div>
	</div>
</div>
