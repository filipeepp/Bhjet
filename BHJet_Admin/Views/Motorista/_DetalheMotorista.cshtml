@using BHJet_Admin.Models.Motorista
@using BHJet_Core.Enum
@model NovoMotoristaModel

@Scripts.Render("~/bundles/jqueryval")

@using (Html.BeginForm("Novo", "Motorista", FormMethod.Post, new { @class = "form-horizontal" }))
{
    <div class="row form-group ">
        @Html.HiddenFor(model => model.EdicaoCadastro);
        @Html.HiddenFor(model => model.ID);

        <div class="panel panel-default" style="margin:30px; margin-top:-25px">
            <div class="panel-body">
                <div class="titulo">
                    <h2>
                        <a onclick="history.go(-1);">
                            <i class="fa fa-id-card-o" aria-hidden="true"></i>
                        </a>
                        Dados Pessoais
                    </h2>
                </div>

                <div class="col-xs-12 col-sm-12 col-lg-12">
                    <div class="row">
                        <div class="col-md-8">
                            <label for="txtNome">Nome Completo</label>
                            @Html.TextBoxFor(model => model.NomeCompleto, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NomeCompleto, null, new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4">
                            <label for="txtNomeFantasia">CPF / CNPJ</label>
                            @Html.TextBoxFor(model => model.CpfCnpj, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CpfCnpj, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class=" col-md-5">
                            <label for="txtNomeFantasia">Telefone Residencial</label>
                            @Html.TextBoxFor(model => model.TelefoneResidencial, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TelefoneResidencial, null, new { @class = "text-danger" })
                        </div>
                        <div class=" col-md-5">
                            <label for="txtNomeFantasia">Telefone Celular</label>
                            @Html.TextBoxFor(model => model.TelefoneCelular, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TelefoneCelular, null, new { @class = "text-danger" })
                        </div>
                        <div class=" col-md-2">
                            <div style="margin-top:25px;">
                                <label for="CelularWhatsapp" class="label-cbx">
                                    <input id="CelularWhatsapp" type="checkbox" name="CelularWhatsapp" value="@Model.CelularWhatsapp" class="invisible">
                                    <div class="checkbox">
                                        <svg width="20px" height="20px" viewBox="0 0 20 20">
                                            <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                            <polyline points="4 11 8 15 16 6"></polyline>
                                        </svg>
                                    </div>
                                    <span>Whatsapp</span>
                                </label>
                            </div>
                        </div>
                        <br class="hidden-lg" />
                    </div>

                    <div class="row">

                        <div class="col-md-4">
                            <label for="txtNomeFantasia">CNH</label>
                            @Html.TextBoxFor(model => model.CNH, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CNH, null, new { @class = "text-danger" })
                        </div>
                        <div class=" col-md-4">
                            <label for="txtNomeFantasia">Categoria</label>
                            <br>
                            @foreach (var tipoEnum in Enum.GetValues(typeof(TipoCarteira)))
                            {
                                var id = TagBuilder.CreateSanitizedId(string.Format("{0}_{1}_{2}", "rdbtn", typeof(TipoCarteira), tipoEnum));
                                @Html.RadioButtonFor(s => s.TipoCarteiraMotorista, tipoEnum, new { id, @class = "option-input radio" })
                                @Html.Label(tipoEnum.ToString(), new { @for = id, @style = "vertical-align: sub;" })
                            }
                            @Html.ValidationMessageFor(model => model.TipoCarteiraMotorista, null, new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="panel panel-default" style="margin:30px">
            <div class="panel-body">
                <div class="titulo">
                    <h2>
                        <a onclick="history.go(-1);">
                            <i class="fa fa-map-marker" aria-hidden="true"></i>
                        </a>
                        Endereço
                    </h2>
                </div>

                <div class="col-xs-12 col-sm-12 col-lg-12">
                    <div class="row">
                        <div class="col-md-3 col-lg-2">
                            <label for="EnderecoPrincipal" class="label-cbx">
                                <input id="EnderecoPrincipal" type="checkbox" name="EnderecoPrincipal" value="@Model.EnderecoPrincipal" class="invisible">
                                <div class="checkbox">
                                    <svg width="20px" height="20px" viewBox="0 0 20 20">
                                        <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                        <polyline points="4 11 8 15 16 6"></polyline>
                                    </svg>
                                </div>
                                <span>Endereço Principal</span>
                            </label>
                        </div>
                    </div>
                    <br class="hidden-sm" />
                    <div class="row">
                        <div class=" col-md-3 col-lg-1">
                            <label for="txtNomeFantasia">CEP</label>
                            @Html.TextBoxFor(model => model.Cep, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Cep, null, new { @class = "text-danger" })
                        </div>
                        <div class=" col-md-3 col-lg-4">
                            <label for="txtNomeFantasia">Rua</label>
                            @Html.TextBoxFor(model => model.Rua, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Rua, null, new { @class = "text-danger" })
                        </div>
                        <div class=" col-md-2 col-lg-1">
                            <label for="txtNomeFantasia">Número</label>
                            @Html.TextBoxFor(model => model.RuaNumero, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RuaNumero, null, new { @class = "text-danger" })
                        </div>
                        <div class=" col-md-3 col-lg-2">
                            <label for="txtNomeFantasia">Complemento</label>
                            @Html.TextBoxFor(model => model.Complemento, new { @class = "form-control" })
                        </div>
                        <div class=" col-md-3 col-lg-2">
                            <label for="txtNomeFantasia">Bairro</label>
                            @Html.TextBoxFor(model => model.Bairro, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Bairro, null, new { @class = "text-danger" })
                        </div>
                        <div class=" col-md-3 col-lg-2">
                            <label for="txtNomeFantasia">Cidade</label>
                            @Html.TextBoxFor(model => model.Cidade, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Cidade, null, new { @class = "text-danger" })
                        </div>
                        <div class=" col-md-1 col-lg-1">
                            <label for="txtNomeFantasia">UF</label>
                            @Html.TextBoxFor(model => model.UF, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UF, null, new { @class = "text-danger" })
                        </div>
                        <div class=" col-md-3 col-lg-2">
                            <label for="txtNomeFantasia">Ponto de Referência</label>
                            @Html.TextBoxFor(model => model.PontoReferencia, new { @class = "form-control" })
                        </div>

                    </div>
                </div>

            </div>
        </div>

        <div class="panel panel-default" style="margin:30px">
            <div class="panel-body">
                <div class="titulo">
                    <h2>
                        <a onclick="history.go(-1);">
                            <i class="fa fa-files-o" aria-hidden="true"></i>
                        </a>
                        Dados Extras
                    </h2>
                </div>

                <div class="col-xs-12 col-sm-12 col-lg-12">
                    <div class="row">
                        <div class="col-md-12">
                            <label for="txtNomeFantasia">Regime de contratação</label>
                            <br />
                            @foreach (var tipoEnum in Enum.GetValues(typeof(RegimeContratacao)))
                            {
                                var id = TagBuilder.CreateSanitizedId(string.Format("{0}_{1}_{2}", "rdbtn", typeof(RegimeContratacao), tipoEnum));
                                @Html.RadioButtonFor(s => s.TipoRegimeContratacao, tipoEnum, new { id, @class = "option-input radio" })
                                @Html.Label(tipoEnum.ToString(), new { @for = id, @style = "vertical-align: sub;" })
                            }
                            @Html.ValidationMessageFor(model => model.TipoRegimeContratacao, null, new { @class = "text-danger" })
                        </div>
                        <div class=" col-md-12">
                            <br class="hidden-sm" />
                            <label for="txtNomeFantasia">Observações</label>
                            @Html.TextAreaFor(model => model.Observacao, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="row">
        <div class="col-xs-12 col-md-12 text-center">
            <button type="submit" class="btn btn-default" value="Pesquisar">
                <i class="fa fa-share"></i>Confirmar Solicitação
            </button>
        </div>
    </div>
}

<script src="@Url.Content("~/Scripts/jquery.mask.min.js")"></script>
<script src="~/Scripts/DetalheMotorista.js"></script>
