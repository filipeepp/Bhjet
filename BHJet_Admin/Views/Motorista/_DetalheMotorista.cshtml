@using BHJet_Admin.Models.Motorista
@using BHJet_Core.Enum
@model NovoMotoristaModel

@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm("Novo", "Motorista", FormMethod.Post, new { @class = "form-horizontal" }))
{
    <div class="row form-group ">

        <div class="col-xs-12 col-sm-12 col-lg-12">
            @Html.HiddenFor(model => model.EdicaoCadastro);
            @Html.HiddenFor(model => model.ID);
            <div class="col-md-12">
                <label for="txtNome">Nome Completo</label>
                @Html.TextBoxFor(model => model.NomeCompleto, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NomeCompleto, null, new { @class = "text-danger" })
            </div>

            <div class="col-md-4">
                <label for="txtNomeFantasia">CPF / CNPJ</label>
                @Html.TextBoxFor(model => model.CpfCnpj, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CpfCnpj, null, new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                <label for="txtNomeFantasia">CNH</label>
                @Html.TextBoxFor(model => model.CNH, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CNH, null, new { @class = "text-danger" })
            </div>
            <div class=" col-md-4">
                <label for="txtNomeFantasia">Categoria</label>
                <br>
                @foreach (var tipoEnum in Enum.GetValues(typeof(TipoCarteira)))
                {
                    var id = TagBuilder.CreateSanitizedId(string.Format("{0}_{1}_{2}", "rdbtn", typeof(TipoCarteira), tipoEnum));
                    @Html.RadioButtonFor(s => s.TipoCarteiraMotorista, tipoEnum, new { id, @class = "option-input radio" })
                    @Html.Label(tipoEnum.ToString(), new { @for = id, @style = "vertical-align: sub;" })
                }
                @Html.ValidationMessageFor(model => model.TipoCarteiraMotorista, null, new { @class = "text-danger" })
            </div>

            <div class=" col-md-12">
                <label for="txtNomeFantasia">Endereço</label>
                @Html.TextBoxFor(model => model.Endereco, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Endereco, null, new { @class = "text-danger" })
            </div>

            <div class=" col-md-6">
                <label for="txtNomeFantasia">Telefone Residencial</label>
                @Html.TextBoxFor(model => model.TelefoneResidencial, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TelefoneResidencial, null, new { @class = "text-danger" })
            </div>
            <div class=" col-md-4">
                <label for="txtNomeFantasia">Telefone Celular</label>
                @Html.TextBoxFor(model => model.TelefoneCelular, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TelefoneCelular, null, new { @class = "text-danger" })
            </div>
            <div class=" col-md-2">

                <div style="margin-top:25px;">
                    <label for="CelularWhatsapp" class="label-cbx">
                        <input id="CelularWhatsapp" type="checkbox" name="CelularWhatsapp" value="@Model.CelularWhatsapp" class="invisible">
                        <div class="checkbox">
                            <svg width="20px" height="20px" viewBox="0 0 20 20">
                                <path d="M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z"></path>
                                <polyline points="4 11 8 15 16 6"></polyline>
                            </svg>
                        </div>
                        <span>Whatsapp</span>
                    </label>
                </div>

            </div>
            <br class="hidden-lg" />

            <div class="col-md-12">
                <label for="txtNomeFantasia">E-mail</label>
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email, null, new { @class = "text-danger" })
            </div>

            <div class="col-md-12">
                <label for="txtNomeFantasia">Regime de contratação</label>
                <br />
                @foreach (var tipoEnum in Enum.GetValues(typeof(RegimeContratacao)))
                {
                    var id = TagBuilder.CreateSanitizedId(string.Format("{0}_{1}_{2}", "rdbtn", typeof(RegimeContratacao), tipoEnum));
                    @Html.RadioButtonFor(s => s.TipoRegimeContratacao, tipoEnum, new { id, @class = "option-input radio" })
                    @Html.Label(tipoEnum.ToString(), new { @for = id, @style = "vertical-align: sub;" })
                }
                @Html.ValidationMessageFor(model => model.TipoRegimeContratacao, null, new { @class = "text-danger" })
            </div>

            <div class=" col-md-12">
                <label for="txtNomeFantasia">Observações</label>
                @Html.TextAreaFor(model => model.Observacao, new { @class = "form-control" })
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col-xs-12 col-md-12 text-center">
            <button type="submit" class="btn btn-default" value="Pesquisar">
                <i class="fa fa-share"></i>Confirmar Solicitação
            </button>
        </div>
    </div>
}

    <script src="@Url.Content("~/Scripts/jquery.mask.min.js")"></script>
    <script src="~/Scripts/DetalheMotorista.js"></script>
